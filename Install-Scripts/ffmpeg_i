#!/bin/bash
clear

# firmware update (to make sure the v4L2 drive is available.)
rpi-update

# load it and create /dev/video0
modprobe bcm2835-v4l2




# https://www.hackster.io/whitebank/rasbperry-pi-ffmpeg-install-and-stream-to-web-389c34

# make -j4 only works with model B+ (4cores)

# install library
cd /usr/src
 git clone git://git.videolan.org/x264
 cd x264
 ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl
 make -j4
 sudo make -j4 install
 
# install FFmpeg
cd /usr/src
 git clone git://source.ffmpeg.org/ffmpeg.git
 cd ffmpeg/
 git checkout 2ca65fc7b74444edd51d5803a2c1e05a801a6023
 sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree
 make -j4
 sudo make -j4 install
 
# configure
echo 'Port 8090
 # bind to all IPs aliased or not
 BindAddress 0.0.0.0
 # max number of simultaneous clients
 MaxClients 10
 # max bandwidth per-client (kb/s)
 MaxBandwidth 1000
 # Suppress that if you want to launch ffserver as a daemon.
 NoDaemon

<Feed feed1.ffm>
 File /tmp/feed1.ffm
 FileMaxSize 10M
 </Feed>

<Stream test.mjpg>
 Feed feed1.ffm
 Format mpjpeg
 VideoFrameRate 4
 VideoSize 600x480
 VideoBitRate 80
 # VideoQMin 1
 # VideoQMax 100
 VideoIntraOnly
 NoAudio
 Strict -1
 </Stream>' >/etc/ffserver.conf
 
 
echo 'ffserver -f /etc/ffserver.conf & ffmpeg -v verbose -r 5 -s 600x480 -f video4linux2 -i /dev/video0 http://localhost:8090/feed1.ffm' >/usr/sbin/webcam.sh

chmod +x /usr/sbin/webcam.sh 
/usr/sbin/webcam.sh